/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from './common';
import type { OddsLottery, OddsLotteryInterface } from './OddsLottery';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_platformWallet',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientContractBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidLotteryId',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidMaxTickets',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LotteryAlreadyDrawn',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LotteryDoesNotExist',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LotteryIdExists',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LotteryNotActive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LotteryNotDrawn',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MustBuyAtLeastOneTicket',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoTickets',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SoldOut',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TooManyLotteries',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxTickets',
        type: 'uint256',
      },
    ],
    name: 'LotteryCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'winningTicketIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'secondPlaceTicketIds',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'prizePool',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'platformCut',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'distributedPool',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalTicketsSold',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'firstPlacePrizePerTicket',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'secondPlacePrizePerTicket',
        type: 'uint256',
      },
    ],
    name: 'LotteryEnded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'buyer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'ticketId',
        type: 'uint256',
      },
    ],
    name: 'TicketPurchased',
    type: 'event',
  },
  {
    inputs: [],
    name: 'TICKET_PRICE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'lotteryIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'count',
        type: 'uint256',
      },
    ],
    name: 'buyTickets',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxTickets',
        type: 'uint256',
      },
    ],
    name: 'createLottery',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
    ],
    name: 'endLottery',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
    ],
    name: 'getLottery',
    outputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxTickets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ticketsSold',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'isDrawn',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ticketId',
        type: 'uint256',
      },
    ],
    name: 'getTicket',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isWinning',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'prizeAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct OddsLottery.Ticket',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
    ],
    name: 'getTickets',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isWinning',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'prizeAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct OddsLottery.Ticket[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'lotteryId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserTicketsInLottery',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isWinning',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'prizeAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct OddsLottery.Ticket[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'lotteries',
    outputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxTickets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ticketsSold',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'isDrawn',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'platformWallet',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdc',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c03461012857601f61162038819003918201601f19168301916001600160401b0383118484101761012d57808492604094855283398101031261012857610052602061004b83610143565b9201610143565b33156101125760008054336001600160a01b0319821681178355604051949290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a01b031680158015610101575b6100f05760805260a0526114c890816101588239608051818181610483015281816109b40152610a69015260a05181818161032d0152610b270152f35b63e6c4247b60e01b60005260046000fd5b506001600160a01b038216156100b3565b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101285756fe608080604052600436101561001357600080fd5b60003560e01c9081631398e076146110f45750806314f2979f146110705780631977b98214610f215780631a95f15f14610f035780633739e769146109e35780633e413bee1461099e578063715018a6146109455780638da5cb5b1461091c57806392e845f61461089d578063a426e4c8146107c7578063d4d269ec146103e9578063f2fde38b1461035c578063fa2af9da146103175763fe35804e146100b957600080fd5b34610312576100c7366111d6565b6100cf611345565b80158015610307575b6102f65781156102e5578160005260016020526040600020546102d4576040516000610105602083611208565b81526000805b8181106102bd5750506040519060e0820182811067ffffffffffffffff8211176102a757604052838252602082019083825260408301600081526060840191825260808401916001835260a08501916000835260c086019442865288600052600160205260406000209651875551600187015551600286015560038501905190815191600160401b83116102a757815483835580841061023e575b506020019060005260206000206000915b83831061022057897f47fd7f728dd62fa82686e732a84ce6c7b0ea5222a999c539c4594d7d57966e7060208b8b60058c8c8c600485019151151560ff8019845416911617825551151561ff0082549160081b169061ff00191617905551910155604051908152a2005b600360208261023260019451866112fa565b019201920191906101b7565b8060030290600382040361029157836003026003810485036102915783600052602060002091820191015b81811061027657506101a6565b80600060039255600060018201556000600282015501610269565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6020906102c8611282565b8282860101520161010b565b6373e7844360e11b60005260046000fd5b630cc8f3b960e21b60005260046000fd5b630100f44360e31b60005260046000fd5b5061271081116100d8565b600080fd5b34610312576000366003190112610312576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610312576020366003190112610312576004356001600160a01b038116908190036103125761038a611345565b80156103d357600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346103125760403660031901126103125760043567ffffffffffffffff811161031257366023820112156103125780600401359067ffffffffffffffff8211610312573660248360051b83010111610312576024359180156102e55782156107b657828102818104840361029157620f4240810290808204620f42401490151715610291576040516370a0823160e01b81523360048201527f000000000000000000000000000000000000000000000000000000000000000091906001600160a01b03831690602081602481855afa8015610764578391600091610781575b501061077057602060449160405192838092636eb1769f60e11b82523360048301523060248301525afa801561076457829160009161072f575b501061071e5761054591604094939451916323b872dd60e01b6020840152336024840152306044840152606483015260648252610540608483611208565b611437565b339060005b8381101561071c57600060248260051b84010135908181526001602052604081209182541561070d57600483015460ff8116156106fe5760081c60ff166106ef57600283019283549161059d8a846113ef565b6001830154106106e057600183018093116106cc576003849201915b8a81106105dc57505050505090816105d487600194546113ef565b90550161054a565b6105e681856113ef565b6040516105f2816111ec565b8181523360208201528660408201528660608201528454600160401b8110156106b8579061062982600161062f94018855876112de565b9061136e565b8286526002602052604086208a875260205260408620805490600160401b8210156106b857600182018082558210156106a457918091600194938952602089200155604051908152837fdbaaf4c87ce30816c961a81d110622a3227ede77953d4383d514ff88ab2e0fd360203393a3016105b9565b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b84526011600452602484fd5b6352df9fe560e01b8452600484fd5b6301d481ef60e41b8252600482fd5b6376c313d160e11b8352600483fd5b63034a53cd60e21b8252600482fd5b005b6313be252b60e01b60005260046000fd5b9150506020813d60201161075c575b8161074b60209383611208565b810103126103125781905187610502565b3d915061073e565b6040513d6000823e3d90fd5b631e9acf1760e31b60005260046000fd5b9150506020813d6020116107ae575b8161079d60209383611208565b8101031261031257829051886104c8565b3d9150610790565b63abdeffd360e01b60005260046000fd5b34610312576107d5366111d6565b906107de611282565b5060005260016020526040600020908015158061088f575b156108565760001981019081116102915761081961081f916003608094016112de565b50611242565b6108546040518092606080918051845260018060a01b0360208201511660208501526040810151151560408501520151910152565bf35b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a58dad95d081251607a1b6044820152606490fd5b5060028201548111156107f6565b3461031257602036600319011261031257600435600052600160205260406000208054610918600183015491600284015493600560048201549101549160405195869560ff808560081c16941692879260a094919796959260c085019885526020850152604084015215156060830152151560808201520152565b0390f35b34610312576000366003190112610312576000546040516001600160a01b039091168152602090f35b346103125760003660031901126103125761095e611345565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610312576000366003190112610312576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610312576020366003190112610312576109fc611345565b60043560005260016020526040600020805415610ef2576004810190815460ff811615610ee15760081c60ff16610ed057600281019182549260038410610ebf57620f4240840292848404620f42401485151715610291576040516370a0823160e01b81523060048201527f000000000000000000000000000000000000000000000000000000000000000092906020816024816001600160a01b0388165afa8015610764578691600091610e8a575b5010610e7957600382019586546000194301438111610291576005850154604051906020820192408352426040830152606082015260608152610af0608082611208565b519020905b60018111610d49575050624c4b400285810460051486151715610291576064900490610b2182876112d1565b610b4c837f0000000000000000000000000000000000000000000000000000000000000000876113fc565b87549660038804948515610d40575b610b6486611389565b92610b6e87611389565b958160011b828104600214831517156102915792610b918960038c9d960461137f565b938d8a8887610ba38360038a0461137f565b9f6000935b8410610cd3575050505050895b6001600160ff1b038b168b03610291578a60011b811080610cca575b15610c4057610c2f8f8d8f91848f918f92610c15610c1b94876002610bf687876112de565b500155610c0f610c0686866112de565b505493866112d1565b906112a7565b526112de565b50600101546001600160a01b0316906113fc565b600019811461029157600101610bb5565b50610c9895938c93610ca67f395082709a2ba9231154d6ae6a113ccebd8a0a712f8972c8a95aaaeb262a66459997948c9461010061ffff19825416179055549a5493604051998a996101008b526101008b01906113bb565b9089820360208b01526113bb565b9560408801526060870152608086015260a085015260c084015260e08301520390a2005b508d8110610bd1565b610d228486610d34956001610ce984829b6112de565b5001805460ff60a01b191660a08b901b179055856002610d0985856112de565b500155610c1583610d1a81856112de565b5054926112a7565b5085808060a01b0391015416906113fc565b018e9088878e8e610ba8565b60019550610b5b565b604051602081019083825282604082015260408152610d69606082611208565b5190208115610e6357819006600019820182811161029157808b918303610d9d575b50505080156102915760001901610af5565b610dc3600091610dba85610db461081984886112de565b956112de565b5092508d6112de565b939093610e4d57838261062993610de29603610dea575b50508c6112de565b898981610d8b565b805482556001808201805491840180546001600160a01b031981166001600160a01b0394909416938417825591546001600160a81b031990921690921760a091821c60ff16151590911b60ff60a01b161790556002908101549101558d80610dda565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052601260045260246000fd5b63786e0a9960e01b60005260046000fd5b9150506020813d602011610eb7575b81610ea660209383611208565b810103126103125785905188610aac565b3d9150610e99565b6366f3ef9b60e01b60005260046000fd5b6301d481ef60e41b60005260046000fd5b6376c313d160e11b60005260046000fd5b63034a53cd60e21b60005260046000fd5b34610312576000366003190112610312576020604051620f42408152f35b34610312576040366003190112610312576004356024356001600160a01b03811681036103125781600052600260205260406000209060018060a01b03166000526020526040600020906040518083602082955493848152019060005260206000209260005b818110611057575050610f9c92500383611208565b815191610fa88361122a565b92610fb66040519485611208565b808452610fc5601f199161122a565b0160005b81811061104057505060005b815181101561103257826000526001602052600360406000200190610ffa81846112a7565b51600019810190811161029157610819611016916001946112de565b61102082876112a7565b5261102b81866112a7565b5001610fd5565b60405180610918868261116a565b60209061104b611282565b82828801015201610fc9565b8454835260019485019487945060209093019201610f87565b346103125760203660031901126103125760043560005260016020526003604060002001805461109f8161122a565b916110ad6040519384611208565b818352602083019060005260206000206000915b8383106110d65760405180610918878261116a565b600360206001926110e685611242565b8152019201920191906110c1565b346103125760203660031901126103125760043560005260016020528061091860406000208054906001810154916002820154600560048401549301549360ff808560081c16941692879260a094919796959260c085019885526020850152604084015215156060830152151560808201520152565b602060408183019282815284518094520192019060005b81811061118e5750505090565b90919260206080826111cb6001948851606080918051845260018060a01b0360208201511660208501526040810151151560408501520151910152565b019401929101611181565b6040906003190112610312576004359060243590565b6080810190811067ffffffffffffffff8211176102a757604052565b90601f8019910116810190811067ffffffffffffffff8211176102a757604052565b67ffffffffffffffff81116102a75760051b60200190565b9060405161124f816111ec565b8254815260018301546001600160a01b038116602083015260a01c60ff1615156040820152600292909201546060830152565b6040519061128f826111ec565b60006060838281528260208201528260408201520152565b80518210156112bb5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820391821161029157565b80548210156112bb576000526003602060002091020190600090565b815181556020820151600182018054604085015160ff60a01b90151560a01b166001600160a01b039093166001600160a81b0319909116179190911790559060029060600151910155565b6000546001600160a01b0316330361135957565b63118cdaa760e01b6000523360045260246000fd5b9190610e4d5761137d916112fa565b565b8115610e63570490565b906113938261122a565b6113a06040519182611208565b82815280926113b1601f199161122a565b0190602036910137565b906020808351928381520192019060005b8181106113d95750505090565b82518452602093840193909201916001016113cc565b9190820180921161029157565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815261137d91610540606483611208565b906000602091828151910182855af115610764576000513d61148957506001600160a01b0381163b155b6114685750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561146156fea2646970667358221220db1ac32a61da8e6fa5704f2a9aaaa0895188b8307b1ea644bedb262ba02a034964736f6c634300081c0033';

type OddsLotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OddsLotteryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OddsLottery__factory extends ContractFactory {
  constructor(...args: OddsLotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdc: AddressLike,
    _platformWallet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdc, _platformWallet, overrides || {});
  }
  override deploy(
    _usdc: AddressLike,
    _platformWallet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(_usdc, _platformWallet, overrides || {}) as Promise<
      OddsLottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OddsLottery__factory {
    return super.connect(runner) as OddsLottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OddsLotteryInterface {
    return new Interface(_abi) as OddsLotteryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OddsLottery {
    return new Contract(address, _abi, runner) as unknown as OddsLottery;
  }
}
